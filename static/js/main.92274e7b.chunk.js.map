{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","props","todos","selectedId","onSelectTodo","className","map","id","title","completed","classNames","type","onClick","TodoFilter","selectStatus","query","onSelectStatus","onQueryChange","value","onChange","placeholder","event","target","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","selectedTodo","onClose","userId","useState","user","setUser","useEffect","getUser","userFromServer","href","email","name","isIncludesQuery","todoTitle","toLowerCase","includes","toLocaleLowerCase","App","initialTodos","setInitialTodos","setTodos","setSelectedTodo","setSelectStatus","setQuery","handleSelectTodo","todoId","find","todo","gettodosFromServer","a","data","filter","Error","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.92274e7b.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedId?: number;\n  onSelectTodo: (id: number) => void\n};\n\nexport const TodoList: React.FC<Props> = (props) => {\n  const { todos, selectedId, onSelectTodo } = props;\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n\n        {todos.map(({ id, title, completed }) => (\n          <tr\n            data-cy=\"todo\"\n            className={classNames(\n              { 'has-background-info-light': id === selectedId },\n            )}\n            key={id}\n          >\n            <td className=\"is-vcentered\">{id}</td>\n            {completed ? (\n              <td className=\"is-vcentered\">\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </td>\n            ) : (\n              <td className=\"is-vcentered\" />\n            )}\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={classNames(\n                  { 'has-text-danger': !completed },\n                  { 'has-text-success': completed },\n                )}\n              >\n                {title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onSelectTodo(id)}\n              >\n                <span className=\"icon\">\n                  <i className={classNames(\n                    'far',\n                    { 'fa-eye': id !== selectedId },\n                    { 'fa-eye-slash': id === selectedId },\n                  )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","type Props = {\n  selectStatus: string,\n  query: string,\n  onSelectStatus: (event: React.ChangeEvent<HTMLSelectElement>) => void,\n  onQueryChange: (value:string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = (props) => {\n  const {\n    selectStatus,\n    query,\n    onSelectStatus,\n    onQueryChange,\n  } = props;\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    onQueryChange(event.target.value);\n  };\n\n  const handleQueryReset = () => {\n    onQueryChange('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectStatus}\n            onChange={onSelectStatus}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleQueryChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleQueryReset}\n            />\n          )}\n\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\n\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\nimport { Loader } from '../Loader';\n\ntype Props = {\n  selectedTodo: Todo;\n  onClose: (id: number | null) => void\n};\n\nexport const TodoModal: React.FC<Props> = ({ selectedTodo, onClose }) => {\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = selectedTodo;\n  const [user, setUser] = useState<User | null>(null);\n\n  const handleClose = () => onClose(null);\n\n  useEffect(() => {\n    getUser(userId)\n      .then(userFromServer => setUser(userFromServer));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { Todo } from './types/Todo';\n\nimport { getTodos } from './api';\n\nfunction isIncludesQuery(todoTitle: string, query: string) {\n  return todoTitle.toLowerCase().includes(query.toLocaleLowerCase());\n}\n\nexport const App: React.FC = () => {\n  const [initialTodos, setInitialTodos] = useState<Todo[]>([]);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [selectStatus, setSelectStatus] = useState<string>('all');\n  const [query, setQuery] = useState<string>('');\n\n  const handleSelectTodo = (todoId: number | null) => (\n    todoId\n      ? (setSelectedTodo(todos.find(todo => todo.id === todoId) || null))\n      : setSelectedTodo(null)\n  );\n\n  const handleSelectStatus = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectStatus(event.target.value);\n  };\n\n  const handleQueryChange = (value: string) => {\n    setQuery(value);\n  };\n\n  useEffect(() => {\n    const gettodosFromServer = async () => {\n      const data = await getTodos();\n\n      setInitialTodos(data);\n    };\n\n    gettodosFromServer();\n  }, []);\n\n  useEffect(() => {\n    switch (selectStatus) {\n      case 'all':\n        setTodos(\n          initialTodos.filter(({ title }) => isIncludesQuery(title, query)),\n        );\n        break;\n\n      case 'active':\n        setTodos(\n          initialTodos.filter(({ title, completed }) => (\n            !completed && isIncludesQuery(title, query)\n          )),\n        );\n        break;\n\n      case 'completed':\n        setTodos(\n          initialTodos.filter(({ title, completed }) => (\n            completed && isIncludesQuery(title, query)\n          )),\n        );\n        break;\n\n      default: throw new Error('Error: Unable to handle select status');\n    }\n  }, [initialTodos, selectStatus, query]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                selectStatus={selectStatus}\n                query={query}\n                onSelectStatus={handleSelectStatus}\n                onQueryChange={handleQueryChange}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todos.length && !query ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={todos}\n                  selectedId={selectedTodo?.id}\n                  onSelectTodo={handleSelectTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          onClose={handleSelectTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}